args:
- default: false
  description: Additional text by which to query incidents.
  isArray: false
  name: query
  required: false
  secret: false
- default: false
  description: The field name with the label. Supports a comma-separated list, the
    first non-empty value will be taken.
  isArray: false
  name: tagField
  required: true
  secret: false
- default: false
  defaultValue: '*'
  description: 'A comma-separated list of email tags values and mapping. The script
    considers only the tags specified in this field. You can map a label to another
    value by using this format: LABEL:MAPPED_LABEL. For example, for 4 values in email
    tag: malicious, credentials harvesting, inner communitcation, external legit email,
    unclassified. While training, we want to ignore "unclassified" tag, and refer
    to "credentials harvesting" as "malicious" too. Also, we want to merge "inner
    communitcation" and "external legit email" to one tag called "non-malicious".
    The input will be: malicious, credentials harvesting:malicious, inner communitcation:non-malicious,
    external legit email:non-malicious'
  isArray: false
  name: phishingLabels
  required: false
  secret: false
comment: 'A helper script for DBot Create Phishing Classifier V2 playbook. This script
  extends the query based on phishingLabels argument.'
commonfields:
  id: ExtendQueryBasedOnPhishingLabels
  version: -1
enabled: true
name: ExtendQueryBasedOnPhishingLabels
outputs:
- contextPath: TranslatePhishingLabelsIntoQuery.extendedQuery
  type: Unknown
script: '-'
subtype: python3
system: false
tags:
- ml
timeout: '0'
type: python
dockerimage: demisto/python3:3.10.1.25933
runas: DBotWeakRole
runonce: false
pswd: ''
vcShouldKeepItemLegacyProdMachine: false
engineinfo: {
  }
